import React from "react";
import "../Style-pages/HowUse.css";
import Footer from "../Components/Footer";
import Header from "../Components/Header";
import { useLanguage } from "../context/LanguageContext";

const HowUse = () => {
  const { currentLanguage, isRTL } = useLanguage();

  // Complete translations object
  const content = {
    en: {
      title: "๐งฉ Teaching a Child to Use the PECS System on a Screen",
      intro: [
        "PECS (Picture Exchange Communication System) is a visual tool to help children express their needs using pictures. In the electronic version, pictures are displayed on a screen (tablet/mobile/interactive device), and the child learns to press the right picture to ask or communicate.",
        "The training is divided into clear, step-by-step stages to suit the child's abilities and support steady progress."
      ],
      stages: [
        {
          title: "Stage 1: Pressing the Picture to Ask for Something",
          goal: "Goal: The child learns that pressing the picture of something they want = they get it immediately.",
          steps: [
            "Show one picture on the screen of something the child really likes (e.g., juice, toy, biscuit).",
            "When the child reaches for the real item, guide them to press the picture on the screen instead.",
            "As soon as they press the correct picture โ give them the item.",
            "Repeat until the child starts pressing the picture independently."
          ],
          images: ["/14.png", "/13.png", "/17.png"]
        },
        {
          title: "Stage 2: Moving Towards the Screen",
          goal: "Goal: The child learns to go to the screen on their own when they want something.",
          steps: [
            "Place the device near the child.",
            "Help them walk to the screen and press the picture when they want something.",
            "Gradually increase the distance to encourage independent movement."
          ]
        },
        {
          title: "Stage 3: Choosing Between Pictures",
          goal: "Goal: The child learns to pick the correct picture from multiple options.",
          description: "This stage has 3 levels in the program:",
          levels: [
            "Level 1: Choose from 2 pictures (one correct, one distractor)",
            "Level 2: Choose from 3 similar pictures",
            "Level 3: Choose from 4 pictures (order changes each time)"
          ],
          notes: [
            "If the child picks the wrong picture, gently guide them and try again.",
            "Move to the next level only when the child is ready.",
            "Goal: Develop strong visual discrimination and focus."
          ],
          images: ["/16.png", "/15.png", "/12.png"]
        },
        {
          title: "Stage 4: Building a Simple Sentence",
          goal: "Goal: The child learns to build a sentence using two pictures (e.g., 'I want + item').",
          steps: [
            "Add a button or picture that says 'I want' on the screen.",
            "Help the child press 'I want' first, then the picture of the item.",
            "If the sentence is correct โ give the item immediately."
          ]
        },
        {
          title: "Stage 5: Answering a Question",
          goal: "Goal: The child can answer the question 'What do you want?' using the screen.",
          steps: [
            "Ask clearly: 'What do you want?'",
            "The child uses the screen to press 'I want + item'.",
            "If correct โ give the item.",
            "If they need help, support them with gentle physical or verbal guidance."
          ]
        },
        {
          title: "Stage 6: Commenting or Describing",
          goal: "Goal: The child learns to use the screen not only to ask for things, but also to comment on what they see.",
          steps: [
            "Add options like 'I see' or 'Look' with pictures of things around them (e.g., cat, car, balloon).",
            "When the child sees something interesting, help them choose 'I see + item'.",
            "Praise them with kind words and smiles, even if no item is given."
          ],
          images: ["/10.png"]
        }
      ],
      readyText: "Are you ready to start?",
      startButton: "Start Learning"
    },
    ar: {
      title: "ุชุนููู ุงูุทูู ุงุณุชุฎุฏุงู ูุธุงู ุจููุณ ุนูู ุงูุดุงุดุฉ",
      intro: [
        "ุจููุณ (ูุธุงู ุงูุชูุงุตู ุจุชุจุงุฏู ุงูุตูุฑ) ูู ุฃุฏุงุฉ ุจุตุฑูุฉ ููุณุงุนุฏุฉ ุงูุฃุทูุงู ุนูู ุงูุชุนุจูุฑ ุนู ุงุญุชูุงุฌุงุชูู ุจุงุณุชุฎุฏุงู ุงูุตูุฑ. ูู ุงููุณุฎุฉ ุงูุฅููุชุฑูููุฉุ ุชูุนุฑุถ ุงูุตูุฑ ุนูู ุดุงุดุฉ (ุฌูุงุฒ ููุญู/ูุงุชู ูุญููู/ุฌูุงุฒ ุชูุงุนูู)ุ ููุชุนูู ุงูุทูู ุงูุถุบุท ุนูู ุงูุตูุฑุฉ ุงูุตุญูุญุฉ ููุณุคุงู ุฃู ุงูุชูุงุตู.",
        "ูููุณูู ุงูุชุฏุฑูุจ ุฅูู ูุฑุงุญู ูุงุถุญุฉ ููุชุฏุฑุฌุฉ ูุชูุงุณุจ ูุฏุฑุงุช ุงูุทูู ูุชุฏุนู ุชูุฏูู ุงููุณุชูุฑ."
      ],
      stages: [
        {
          title: "ุงููุฑุญูุฉ ูก: ุงูุถุบุท ุนูู ุงูุตูุฑุฉ ูุทูุจ ุดูุก",
          goal: "ุงููุฏู: ูุชุนูู ุงูุทูู ุฃู ุงูุถุบุท ุนูู ุตูุฑุฉ ุงูุดูุก ุงูุฐู ูุฑูุฏู ูุนูู ุงูุญุตูู ุนููู ููุฑูุง.",
          steps: [
            "ุงุนุฑุถ ุตูุฑุฉ ูุงุญุฏุฉ ุนูู ุงูุดุงุดุฉ ูุดูุก ูุญุจู ุงูุทูู ุญููุง (ูุซู: ุนุตูุฑุ ูุนุจุฉุ ุจุณูููุช).",
            "ุนูุฏูุง ููุฏ ุงูุทูู ูุฏู ุฅูู ุงูุดูุก ุงูุญููููุ ูุฌููู ููุถุบุท ุนูู ุงูุตูุฑุฉ ุนูู ุงูุดุงุดุฉ.",
            "ุจูุฌุฑุฏ ุงูุถุบุท ุนูู ุงูุตูุฑุฉ ุงูุตุญูุญุฉุ ุฃุนุทู ุงูุดูุก.",
            "ูุฑุฑ ุงูุนูููุฉ ุญุชู ูุจุฏุฃ ุงูุทูู ุจุงูุถุบุท ุนูู ุงูุตูุฑุฉ ุจุดูู ูุณุชูู."
          ],
          images: ["/14.png", "/13.png", "/17.png"]
        },
        {
          title: "ุงููุฑุญูุฉ ุงูุซุงููุฉ: ุงูุชุญุฑู ูุญู ุงูุดุงุดุฉ",
          goal: "ุงููุฏู: ูุชุนูู ุงูุทูู ุงูุชูุฌู ุฅูู ุงูุดุงุดุฉ ุจููุฑุฏู ุนูุฏูุง ูุฑุบุจ ูู ุดูุก ูุง.",
          steps: [
            "ุถุน ุงูุฌูุงุฒ ุจุงููุฑุจ ูู ุงูุทูู.",
            "ุณุงุนุฏู ุนูู ุงููุดู ูุญู ุงูุดุงุดุฉ ูุงูุถุบุท ุนูู ุงูุตูุฑุฉ ุนูุฏูุง ูุฑุบุจ ูู ุดูุก ูุง.",
            "ุฒุฏ ุงููุณุงูุฉ ุชุฏุฑูุฌููุง ูุชุดุฌูุนู ุนูู ุงูุญุฑูุฉ ุงููุณุชููุฉ."
          ]
        },
        {
          title: "ุงููุฑุญูุฉ ุงูุซุงูุซุฉ: ุงูุงุฎุชูุงุฑ ุจูู ุงูุตูุฑ",
          goal: "ุงููุฏู: ูุชุนูู ุงูุทูู ุงุฎุชูุงุฑ ุงูุตูุฑุฉ ุงูุตุญูุญุฉ ูู ุจูู ุฎูุงุฑุงุช ูุชุนุฏุฏุฉ.",
          description: "ุชุชููู ูุฐู ุงููุฑุญูุฉ ูู ุซูุงุซุฉ ูุณุชููุงุช ูู ุงูุจุฑูุงูุฌ:",
          levels: [
            "ุงููุณุชูู 1: ุงุฎุชุฑ ูู ุจูู ุตูุฑุชูู (ูุงุญุฏุฉ ุตุญูุญุฉ ูุงูุฃุฎุฑู ูุดุชุชุฉ)",
            "ุงููุณุชูู 2: ุงุฎุชุฑ ูู ุจูู 3 ุตูุฑ ูุชุดุงุจูุฉ",
            "ุงููุณุชูู 3: ุงุฎุชุฑ ูู ุจูู 4 ุตูุฑ (ูุชุบูุฑ ุงูุชุฑุชูุจ ูู ูู ูุฑุฉ)"
          ],
          notes: [
            "ุฅุฐุง ุงุฎุชุงุฑ ุงูุทูู ุตูุฑุฉ ุฎุงุทุฆุฉุ ุฃุฑุดุฏู ุจูุทู ูุญุงูู ูุฑุฉ ุฃุฎุฑู.",
            "ุงูุชูู ุฅูู ุงููุณุชูู ุงูุชุงูู ููุท ุนูุฏูุง ูููู ุงูุทูู ูุณุชุนุฏูุง.",
            "ุงููุฏู: ุชูููุฉ ุงูุชูููุฒ ุงูุจุตุฑู ูุงููุฏุฑุฉ ุนูู ุงูุชุฑููุฒ."
          ],
          images: ["/16.png", "/15.png", "/12.png"]
        },
        {
          title: "ุงููุฑุญูุฉ ุงูุฑุงุจุนุฉ: ุจูุงุก ุฌููุฉ ุจุณูุทุฉ",
          goal: "ุงููุฏู: ูุชุนูู ุงูุทูู ุจูุงุก ุฌููุฉ ุจุงุณุชุฎุฏุงู ุตูุฑุชูู (ูุซุงู: 'ุฃุฑูุฏ + ุดูุก ูุง').",
          steps: [
            "ุฃุถู ุฒุฑูุง ุฃู ุตูุฑุฉู ููุชูุจูุง ุนูููุง 'ุฃุฑูุฏ' ุนูู ุงูุดุงุดุฉ.",
            "ุณุงุนุฏ ุงูุทูู ุนูู ุงูุถุบุท ุนูู 'ุฃุฑูุฏ' ุฃูููุงุ ุซู ุนูู ุตูุฑุฉ ุงูุนูุตุฑ.",
            "ุฅุฐุง ูุงูุช ุงูุฌููุฉ ุตุญูุญุฉุ ูุฃุนุทูู ุงูุนูุตุฑ ููุฑูุง."
          ]
        },
        {
          title: "ุงููุฑุญูุฉ ุงูุฎุงูุณุฉ: ุงูุฅุฌุงุจุฉ ุนูู ุณุคุงู",
          goal: "ุงููุฏู: ุฃู ูุฌูุจ ุงูุทูู ุนูู ุณุคุงู 'ูุงุฐุง ุชุฑูุฏุ' ุจุงุณุชุฎุฏุงู ุงูุดุงุดุฉ.",
          steps: [
            "ุงุณุฃู: 'ูุงุฐุง ุชุฑูุฏุ' ุจูุถูุญ.",
            "ูุณุชุฎุฏู ุงูุทูู ุงูุดุงุดุฉ ููุถุบุท ุนูู 'ุฃุฑูุฏ + ุนูุตุฑ'.",
            "ุฃุนุทู ุงูุนูุตุฑ ุฅุฐุง ูุงู ุตุญูุญูุง. ุณุงุนุฏู ุจุฑูู ุฅุฐุง ูุฒู ุงูุฃูุฑ."
          ]
        },
        {
          title: "ุงููุฑุญูุฉ ุงูุณุงุฏุณุฉ: ุงูุชุนููู ุฃู ุงููุตู",
          goal: "ุงููุฏู: ูุชุนูู ุงูุทูู ุงุณุชุฎุฏุงู ุงูุดุงุดุฉ ููุณ ููุท ูุทูุจ ุงูุฃุดูุงุกุ ุจู ููุชุนููู ุนูููุง ุฃูุถูุง.",
          steps: [
            "ุฃุถู ุฎูุงุฑุงุช ูุซู 'ุฃุฑู' ุฃู 'ุฃูุธุฑ' ูุน ุตูุฑ ูุฃุดูุงุก ูู ุงูุจูุฆุฉ (ูุทุฉุ ุณูุงุฑุฉุ ุจุงูููุฉ...).",
            "ุนูุฏูุง ูุฑู ุดูุฆูุง ูุซูุฑูุง ููุงูุชูุงูุ ุณุงุนุฏู ุนูู ุงุฎุชูุงุฑ 'ุฃุฑู + ุนูุตุฑ'.",
            "ุงูุฏุญู ุจูููุงุช ูุทููุฉ ูุงุจุชุณุงูุงุชุ ุญุชู ูู ูู ููุนุทู ุฃู ุนูุตุฑ."
          ],
          images: ["/10.png"]
        }
      ],
      readyText: "ูู ุฃูุช ูุณุชุนุฏ ููุจุฏุกุ",
      startButton: "ุงุจุฏุฃ ุงูุชุนูู"
    }
  };

  const langContent = content[currentLanguage] || content.en;

  return (
    <div id="root" dir={isRTL ? "rtl" : "ltr"}>
      <Header />

      <div className="main-content">
        <div className="howuse-wrapper" style={{ backgroundColor: "#f9fbff", marginBottom: "100px" }}>
          <div className="text-center">
            <div className="howuse-header-section">
              <h2 className="howuse-title mb-5" style={{ fontWeight: "700", color: "#173067" }}>
                {langContent.title}
              </h2>

              <div className="howuse-section text-center mb-4">
                {langContent.intro?.map((paragraph, index) => (
                  <p key={index}>{paragraph}</p>
                ))}
              </div>
            </div>

            <div className="howuse-stages container mt-5">
              {langContent.stages?.map((stage, index) => (
                <div className="stage mb-5" data-step={index + 1} key={index}>
                  <h4 className="text-primary fw-bold">{stage.title}</h4>
                  <p><strong>{stage.goal}</strong></p>
                  
                  {stage.description && <p>{stage.description}</p>}
                  
                  {stage.steps?.length > 0 && (
                    <ul>
                      {stage.steps.map((step, i) => (
                        <li key={i}>{step}</li>
                      ))}
                    </ul>
                  )}

                  {stage.levels?.length > 0 && (
                    <>
                      <ul>
                        {stage.levels.map((level, i) => (
                          <li key={i}><strong>{level}</strong></li>
                        ))}
                      </ul>
                    </>
                  )}

                  {stage.notes?.length > 0 && (
                    <>
                      <p><strong>{currentLanguage === 'en' ? 'Important Notes:' : 'ููุงุญุธุงุช ูููุฉ:'}</strong></p>
                      <ul>
                        {stage.notes.map((note, i) => (
                          <li key={i}>{note}</li>
                        ))}
                      </ul>
                    </>
                  )}

                  {stage.images?.length > 0 && (
                    <div className="row">
                      {stage.images.map((img, i) => (
                        <img 
                          src={img} 
                          alt={`Stage ${index + 1}`} 
                          className="stage-image mb-3" 
                          key={i}
                        />
                      ))}
                    </div>
                  )}
                </div>
              ))}

              <div className="start-learning text-center mt-4">
                <p className="mb-3 fw-bold" style={{ color: "#173067", fontSize: "1.2rem" }}>
                  {langContent.readyText}
                </p>
                <a 
                  href="/how-to-use/categories" 
                  className="btn btn-primary start-learning-btn"
                  style={{ 
                    backgroundColor: "#173067",
                    border: "none",
                    padding: "0.5rem 1.5rem",
                    borderRadius: "20px"
                  }}
                >
                  {langContent.startButton}
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>

      <Footer />
    </div>
  );
};

export default HowUse;
